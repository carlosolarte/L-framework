--- Invertibility lemmas.
--- Weakening is needed in the case of ?-copy

    
--- ---------------------------------------------------------
--- Height preserving invertibility lemmas
--- ---------------------------------------------------------

fmod INV-MALL is
    pr META-LEVEL .
    op mod-name : -> Qid .
    eq mod-name = 'LL .
    --- Bound of the search procedure
    op bound-spec : -> Nat .
    eq bound-spec = 10 .
    --- We assume that the Height theorem (if n|-- Gamma then s(n) |-- Gamma )
    op already-proved-theorems : -> RuleSet .
    eq already-proved-theorems =
	( rl '_:_['suc['n:FNat],  '|--<_>_['Gamma:MSFormula, 'Delta:MSFormula]] => 
          '_:_['n:FNat,  '|--<_>_['Gamma:MSFormula, 'Delta:MSFormula]]
          [ label('height) ]. )

	( rl '_:_['n:FNat,  '|--<_>_['_;_['Gamma:MSFormula, 'F:Formula] , 'Delta:MSFormula]] => 
          '_:_['n:FNat,  '|--<_>_['Gamma:MSFormula, 'Delta:MSFormula]]
          [ label('W) ]. ) 

       ( rl '_:_['n:FNat,  '|--<_>_['Gamma:MSFormula, '_;_['G:Formula, 'Delta:MSFormula]]] =>
	  '_:_['n:FNat, '|--<_>_['Gamma:MSFormula, '_;_['!_['G:Formula], 'Delta:MSFormula ]]]
	  [ label('WB) ]. ) .
    
    op file-name : -> String .
    eq file-name = "inv.tex" .
endfm

view Inv-MALL from INV-SPEC to INV-MALL is endv    

mod PROVE-INV is pr   INV-PROVING{Inv-MALL} . endm
