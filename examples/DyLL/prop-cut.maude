--- Cut Elimination theorem
--- Both weakening (on the classical context) and the hight-measure
--- Weakening is internalized in the cut-elimination procedure (see
--- premises-label in the cut-elimination-linear-dyadic.maude file )
--- theorem are needed
load cut-dyadic .

mod CUT-LL is
    pr META-LEVEL .
    pr LL .
    op mod-name : -> Qid .
    eq mod-name = 'LL .
    --- Bound of the search procedure
    op bound-spec : -> Nat .
    eq bound-spec = 15 .

    --- We assume the theorem on heights
    op already-proved-theorems : -> RuleSet .
    eq already-proved-theorems =
	( rl '_:_['suc['n:FNat],  '|--<_>_['Gamma:MSFormula, 'Delta:MSFormula]] => 
        '_:_['n:FNat, '|--<_>_['Gamma:MSFormula,'Delta:MSFormula]]
          [ label('H) ]. )
	( rl '_:_['n:FNat,  '|--<_>_['_;_['Gamma:MSFormula, 'F:Formula], 'Delta:MSFormula]] => 
        '_:_['n:FNat, '|--<_>_['Gamma:MSFormula,'Delta:MSFormula]]
          [ label('W) ]. )
    .
    --- File name to write the output
    op file-name : -> String .
    eq file-name = "cut.tex" .

    --- No invertible lemmas are needed
    op inv-rules : -> QidList .
    eq inv-rules = nil .

endm
    
view Cut-LL from CUT-SPEC to CUT-LL is endv    

mod PROVE-CUT is pr CUT-PROVING{Cut-LL} . endm

