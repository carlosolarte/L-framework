--- -----------------------------------------------------------------
--- MCut Elimination Theorem
--- -----------------------------------------------------------------
load cut-mlin .

fmod MCUT-LIN-ILL is
    pr META-LEVEL .
    op mod-name : -> Qid .
    eq mod-name = 'ILL .
    --- Bound of the search procedure
    op bound-spec : -> Nat .
    eq bound-spec = 10 .

    --- We assume the theorem on heights
    op already-proved-theorems : -> RuleSet .
    eq already-proved-theorems = 
	( rl '_:_['suc['n:FNat],  '_|--_['Gamma:MSFormula, 'F:Formula]] => 
        '_:_['n:FNat, '_|--_['Gamma:MSFormula,'F:Formula]] [ label('H) ]. ) 
    --- Weakening of Bang (prop-WB)
    ( rl '_:_['inf:INat,  '_|--_['Delta:MSFormula, 'G:Formula]] =>
	  '_:_['inf:INat, '_|--_['Delta:MSFormula, '!_['G:Formula] ]]
	  [ label('bInv) ]. )
    --- Contraction on ! formulas
     ( crl '_:_['inf.INat,  '_|--_['_;_['Gamma:MSFormula, 'Delta:!MSFormula], 'G:Formula]] =>
             '_:_['inf.INat,  '_|--_['_;_['Gamma:MSFormula, '_;_['Delta:!MSFormula, 'Delta:!MSFormula]], 'G:Formula]]
             if 'false.Bool = 'isEmpty['Delta:!MSFormula] /\
             'false.Bool = 'duplicated?['Delta:!MSFormula]  /\
             'false.Bool = 'containsBang['Gamma:MSFormula]
             [ label('C) ]. )
    .

    --- File name to write the output
    op file-name : -> String .
    eq file-name = "mcut-lin.tex" .

    --- No invertibility lemma needed
    op inv-rules : -> QidList .
    eq inv-rules = nil . 
endfm
    
view MCut-Lin-ILL from CUT-SPEC to MCUT-LIN-ILL is endv    

mod PROVE-MCUT-LIN is pr CUT-PROVING{MCut-Lin-ILL} . endm

eof 
