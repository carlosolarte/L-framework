--- Definition of the following properties:
--- - Weakening on the right
--- - Weakening on the left
--- - If S is provable with height n then it is proved with height s(n)
--- These 3 properties are proved to be admissible. No previous
--- theorems are needed

--- ---------------------------------------------------------
--- Height preserving admissibility of Weakening on the Left
--- ---------------------------------------------------------
fmod ADMISSIBILITY-W is
    pr META-LEVEL .

    op th-name : -> String .
    eq th-name = "Height preserving admissibility of weakening on the left" .
    
    op mod-name : -> Qid .
    eq mod-name = 'KT45 .

    vars GT GT' GT'' : GroundTerm .
    
    op rule-spec : -> Rule .
    eq rule-spec
      = ( rl '_:_['n:FNat,  '_|--_['_;_['Gamma:MSFormula, 'GW:Formula], 'Delta:MSFormula]] =>
	  '_:_['n:FNat, '_|--_['Gamma:MSFormula,'Delta:MSFormula]] [ label('W) ]. ) .

    op bound-spec : -> Nat .
    eq bound-spec = 10 .

    op file-name : -> String .
    eq file-name = "weakeningL.tex" .

    --- Invertibility is not needed for these theorems
    op inv-rules : -> QidList .
    eq inv-rules = nil .

    --- No mutual induction is needed in this case
    op mutual-ind : GroundTerm -> RuleSet .
    eq mutual-ind(GT) = none .

    --- No previous theorems needed
    op already-proved-theorems : -> RuleSet .
    eq already-proved-theorems = none .

    
endfm

view Admissibility-W from ADMISSIBILITY-SPEC to ADMISSIBILITY-W is endv    

mod PROVE-W is pr  ADMISSIBILITY-THEOREM{Admissibility-W} . endm


    --- ---------------------------------------------------------
    --- Height preserving admissibility of Weakening on the Right
    --- ---------------------------------------------------------
fmod ADMISSIBILITY-WR is
    pr META-LEVEL .

    op th-name : -> String .
    eq th-name = "Height preserving admissibility of weakening on the right" .
    
    op mod-name : -> Qid .
    eq mod-name = 'KT45 .

    vars GT GT' GT'' : GroundTerm .
    
    op rule-spec : -> Rule .
    eq rule-spec
      = ( rl '_:_['n:FNat,  '_|--_['Gamma:MSFormula,  '_;_[ 'GW:Formula, 'Delta:MSFormula]]] =>
	  '_:_['n:FNat, '_|--_['Gamma:MSFormula,'Delta:MSFormula]] [ label('W) ]. ) .

    op bound-spec : -> Nat .
    eq bound-spec = 10 .

    op file-name : -> String .
    eq file-name = "weakeningR.tex" .

    --- Invertibility is not needed for these theorems
    op inv-rules : -> QidList .
    eq inv-rules = nil .

    --- No mutual induction is needed in this case
    op mutual-ind : GroundTerm -> RuleSet .
    eq mutual-ind(GT) = none .

    --- No previous theorems needed
    op already-proved-theorems : -> RuleSet .
    eq already-proved-theorems = none .

endfm

view Admissibility-WR from ADMISSIBILITY-SPEC to ADMISSIBILITY-WR is endv    

mod PROVE-WR is pr  ADMISSIBILITY-THEOREM{Admissibility-WR} . endm


    --- ---------------------------------------------------------
    --- Height of derivations
    --- Theorem: if n : Gamma |- Delta then s(n) : Gamma |- Delta
    --- ---------------------------------------------------------


fmod ADMISSIBILITY-HEIGHT is
    pr META-LEVEL .

    op th-name : -> String .
    eq th-name = "Measure of derivations" .
    
    op mod-name : -> Qid .
    eq mod-name = 'KT45 .

    vars GT GT' GT'' : GroundTerm .
    
    op rule-spec : -> Rule .
    eq rule-spec
      = ( rl '_:_['suc['n:FNat],  '_|--_['Gamma:MSFormula, 'Delta:MSFormula]] =>
	  '_:_['n:FNat, '_|--_['Gamma:MSFormula,'Delta:MSFormula]] [ label('H) ]. ) .

    op bound-spec : -> Nat .
    eq bound-spec = 10 .

    op file-name : -> String .
    eq file-name = "height.tex" .

    --- Invertibility is not needed for these theorems
    op inv-rules : -> QidList .
    eq inv-rules = nil .

    --- No mutual induction is needed in this case
    op mutual-ind : GroundTerm -> RuleSet .
    eq mutual-ind(GT) = none .

    --- No previous theorems needed
    op already-proved-theorems : -> RuleSet .
    eq already-proved-theorems = none .

endfm

view Admissibility-Height from ADMISSIBILITY-SPEC to ADMISSIBILITY-HEIGHT is endv    

mod PROVE-HEIGHT is pr  ADMISSIBILITY-THEOREM{Admissibility-Height} . endm

